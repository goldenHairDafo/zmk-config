/*
 * Copyright (c) 2023 Dafo with the golden Hair
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_de.h"

#define BASE 0
#define SYMBOL 1
#define EXTRA 2
#define UMLAUT 3
#define NAV 4
#define FUNC 5
#define MOUSE 6
#define SYSTEM 6
#define GAME 7
#define GAME_LO 8
#define GAME_HI 9 

#define HYPER LA(LC(LS(LGUI)))
#define MEH   LA(LC(LSHFT))

&sk {
    quick-release;
};
&sl {
    release-after-ms = <5000>;
};

/ {
        behaviors {
            hs: home_row_mod_shift {
                  compatible = "zmk,behavior-hold-tap";
                  label = "HOMEROW_MOD_SHIFT";
                  #binding-cells = <2>;
                  tapping-term-ms = <150>;
                  flavor = "tap-preferred";
                  bindings = <&kp>, <&kp>;
            };
            hm: home_row_mods {
                  compatible = "zmk,behavior-hold-tap";
                  label = "HOMEROW_MODS";
                  #binding-cells = <2>;
                  tapping-term-ms = <210>;
                  quick-tap-ms = <0>;
                  flavor = "tap-preferred";
                  bindings = <&kp>, <&kp>;
            };
            sm: hold_tap_sk_mo {
                  compatible = "zmk,behavior-hold-tap";
                  label = "HOLD_TAP_SK_MO";
                  #binding-cells = <2>;
                  tapping-term-ms = <300>;
                  bindings = <&mo>, <&sk>;
            };
        };
        macros {
            m_do: m_do {
               label = "M_DOMAIN";
               compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                = <&kp DE_E  &kp N6  &kp DE_Z  &kp N9  &kp R  &kp DE_DOT  &kp N  &kp DE_E  &kp T>
                ;
            };
            m_scj: m_scj {
               label = "M_SATIS_CROUCH_JUMP";
               compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                = <&macro_press &kp C>
                , <&macro_tap_time 300>
                , <&macro_tap &kp SPACE>
                , <&macro_wait_time 20>
                , <&macro_release &kp C>
                ;
            };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                    label = "Base";
// ---------------------------------------------------------------------------------------------
// | ALT       |  Q  |  W  |  E  |  R  |  T  | ### |  Z  |  U   |  I  |  O  |  P  | CAPS_WORD  |
// | TAB       |  A  |  S  |  D  |  F  |  G  | ### |  H  |  J   |  K  |  L  |  "  | sl SYMBOL  |
// | sl UMLAUT |  Y  |  X  |  C  |  V  |  B  | ### |  N  |  M   |  ,  |  .  |  -  | sl UMLAUT  |
//                         | BSP | SPC | LSH | ### | LCT | RET  | ESC |
                        bindings = <
   &sk LALT    &kp DE_Q         &kp W  &kp DE_E      &kp R        &kp T    &kp DE_Z    &kp U         &kp I          &kp O        &kp P                &sk LALT
   &sk LSHIFT  &kp A            &kp S  &kp D         &kp F        &kp G    &kp H       &kp J         &kp K          &kp L        &kp DE_DQT           &sk RSHFT
   &sk LCTRL   &lt UMLAUT DE_Y  &kp X  &kp C         &kp V        &kp B    &kp N       &hm RALT M    &kp DE_COMMA   &kp DE_DOT   &lt UMLAUT DE_MINUS  &sk RCTRL
                                       &hm LGUI ESC  &kp SPACE    &mo NAV  &sl SYMBOL  &lt FUNC RET  &hm LGUI BSPC
                        >;
                };
                symbols_layer {
                    label = "Sym";
// ------------------------------------------------------------------------------
// |    |  1  |  2  |  3  |  4  |  5  | ### |  6  |  7  |  8  |  9  |  0  |     |
// |    |  ^  |  [  |  <  |  (  |  {  | ### |  /  |  *  |  +  |  =  |  '  |     |
// |    |  ´  |  ]  |  >  |  )  |  }  | ### |  $  |  &  |  |  |  !  |  #  |     |
//                  | BSP | SPC | LSH | ### | LCT | RET | ESC |
                        bindings = <
   &trans  &kp N1        &kp N2       &kp N3     &kp N4        &kp N5             &kp N6       &kp N7       &kp N8       &kp N9        &kp N0       &trans
   &trans  &kp DE_CARET  &kp DE_LBKT  &kp DE_LT  &kp DE_LPAR   &kp DE_LBRC        &kp DE_FSLH  &kp DE_STAR  &kp DE_PLUS  &kp DE_EQUAL  &kp DE_SQT   &trans
   &trans  &kp DE_ACUTE  &kp DE_RBKT  &kp DE_GT  &kp DE_RPAR   &kp DE_RBRC        &kp DE_DLLR  &kp DE_AMPS  &kp DE_PIPE  &kp DE_EXCL   &kp DE_HASH  &trans
                                      &trans     &trans        &sl EXTRA          &sl EXTRA    &trans       &trans
                        >;
                };
                extra_layer {
                    label = "Extra";
// -----------------------------------------------------------------------------------
// |    |  1  |  ²  |  ³  |  4  |  5  | ### |  6  |  7  |  8  |  9  |  0       |     |
// |    |  °  |  <  |  )  |  {  |  ]  | ### |  \  |  *  |  %  |  ~  |  `       |     |
// |    |  §  |  >  |  )  |  }  |  ]  | ### |  €  |  µ  |  |  |  ?  |  SysReq  |     |
//                  | BSP | SPC | LSH | ### | LCT | RET | ESC |
                        bindings = <
   &trans  &kp N1       &kp DE_SQUARE &kp DE_CUBE  &kp N4       &kp N5           &kp N6       &kp N7       &kp N8        &kp N9        &kp N0        &trans
   &trans  &kp DE_DEG   &kp DE_GT     &kp DE_RPAR  &kp DE_RBRC  &kp DE_RBKT      &kp DE_BSLH  &kp DE_STAR  &kp DE_PRCNT  &kp DE_TILDE  &kp DE_GRAVE  &trans
   &trans  &kp DE_SECT  &kp DE_GT     &kp DE_RPAR  &kp DE_RBRC  &kp DE_RBKT      &kp DE_EURO  &kp DE_AMPS  &kp DE_PIPE   &kp DE_QMARK  &kp SYSREQ    &trans
                                      &trans       &trans       &trans           &trans       &trans       &trans
                        >;
                };
                umlaut_layer {
                    label = "Euro";
// --------------------------------------------------------------------------------
// |   |  @  |  @  |  €  |     |     | ### |     |  ü  |     |  ö  |  §  |      |
// |   |  ä  |  ß  |     |     |     | ### |     |     |     |     |     |      |
// |   |     |     |     |     |     | ### |     |     |     |     |     |      |
//                 | BSP | SPC | LSH | ### | LCT | RET | ESC |
                        bindings = <
   &trans  &kp DE_AT        &trans     &kp DE_EURO  &trans  &trans      &trans  &kp DE_U_UMLAUT  &trans   &kp DE_O_UMLAUT  &kp DE_SECT  &trans
   &trans  &kp DE_A_UMLAUT  &kp DE_SZ  &trans       &trans  &trans      &trans  &trans           &trans   &trans           &trans       &trans
   &trans  &trans           &trans     &trans       &trans  &trans      &trans  &trans           &trans   &trans           &trans       &trans
                                       &trans       &trans  &trans      &trans  &trans           &trans
                        >;
                };
                navigation_layer {
                    label = "Nav";
// ------------------------------------------------------------------------------------------
// |   |     |     |     | M domain |          | ### | REDO | UNDO  | COPY | CUT | PAST      |      |
// |   |     |     |     |          |          | ### |   <  |  v    |  ^   |  >  | TAB       |      |
// |   |     |     |     | L GAME   | L System | ### | HOME | PDOWN | PUP  | END | CAPS_WORD |      |
//                 |     |          |          | ### |      |       |      |
                        bindings = <
   &trans   &trans  &trans  &trans  &m_do      &trans             &kp LC(R)  &kp LC(DE_Z)  &kp LC(INS)  &kp LS(DEL)  &kp LS(INS)  &trans
   &trans   &trans  &trans  &trans  &trans     &trans             &kp LEFT   &kp DOWN      &kp UP       &kp RIGHT    &kp TAB      &trans
   &trans   &trans  &trans  &trans  &tog GAME  &sl SYSTEM         &kp HOME   &kp PG_DN     &kp PG_UP    &kp END      &caps_word   &trans
                            &trans  &trans     &trans             &trans     &trans        &trans
                        >;
                };
                function_layer {
                    label = "Func";
// --------------------------------------------------------------------------------
// |   |  F1   |  F2   |  F3  | F4    |  F5   | ### |  F6       |  F7  |  F8   |  F9  |  F10  |      |
// |   |  F11  |  F12  |      |       |       | ### |           |      |       |      |       |      |
// |   |       |       |      |       |       | ### |  Hyper    |  MEH |       |      |       |      |
//                     | BSP  | SPC   |  LSH  | ### |  LCT      | RET  | ESC   |
                        bindings = <
   &trans   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5           &kp F6     &kp F7   &kp F8   &kp F9  &kp F10  &trans
   &trans   &kp F11  &kp F12  &kp F13  &kp F14  &kp F15          &trans     &trans   &trans   &trans  &trans   &trans
   &trans   &trans   &trans   &trans   &trans   &trans           &sk HYPER  &sk MEH  &trans   &trans  &trans   &trans
                              &trans   &trans   &trans           &trans     &trans  &trans
                        >;
                };
                system_layer {
                    label = "Corne";
// -----------------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | ### |     |     |     |     |      |
// |      |     |     |     |     |     |   | ### |     |     |     |     |      |
// |      |     |     |     |     |     |   | ### |     |     |     |     |      |
//                    |     |     |     |   | ### |     |     |
                        bindings = <
   &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4       &out OUT_BLE  &out OUT_USB  &trans  &trans  &trans  &ext_power EP_TOG
   &trans       &trans        &trans        &trans        &trans        &trans             &trans        &trans        &trans  &trans  &trans  &trans
   &bootloader  &trans        &trans        &trans        &trans        &trans             &trans        &trans        &trans  &trans  &trans  &bootloader
                                            &trans        &trans        &trans             &trans        &trans        &trans
                        >;
                };
                game_layer {
                    label = "Game";
// -----------------------------------------------------------------------------------------
// |  TAB    |     |     |     |       |     | ### |     |     |     |     |     |      |
// |  M_SCJ  |  A  |  S  |  D  |  F    |  G  | ### |     |     |     |     |     |      |
// |         |     |     |     |       |     | ### |     |     |     |     |     |      |
//                       |     | SPACE |     | ### |     |     |     |
                        bindings = <
   &hm LALT TAB &trans  &trans  &trans   &trans     &trans           &trans  &trans  &trans  &trans  &trans  &trans
   &trans       &trans  &trans  &trans   &trans     &trans           &trans  &trans  &trans  &trans  &trans  &trans
   &trans       &trans  &trans  &trans   &trans     &trans           &trans  &trans  &trans  &trans  &trans  &trans
                                &kp ESC  &kp SPACE  &sl GAME_LO      &trans  &trans  &trans
                        >;
                };
                game_lower_layer {
                    label = "GL";
// -----------------------------------------------------------------------------------------
// |  TAB  |     |     |        |        |     | ### |     |     |     |     |     |      |
// |  ALT  |  A  |  S  |  D     |  F     |  G  | ### |     |     |     |     |     |      |
// |  GUI  |     |     |        |  M     |  N  | ### |     |     |     |     |     |      |
//                     | L GAME |  m_scj |     | ### |     |     |     |
                        bindings = <
   &kp TAB   &kp DE_Z  &kp U   &kp I         &kp O       &kp P             &trans  &trans  &trans  &trans  &trans  &trans
   &kp LALT  &kp H     &kp J   &kp K         &kp L       &kp DE_DQT        &trans  &trans  &trans  &trans  &trans  &trans
   &kp LGUI  &kp N     &kp M   &kp DE_COMMA  &kp DE_DOT  &kp DE_MINUS      &trans  &trans  &trans  &trans  &trans  &trans
                               &to BASE      &trans      &sl GAME_HI       &trans  &trans  &trans
                        >;
                };
                game_higher_layer {
                    label = "GH";
// -----------------------------------------------------------------------------------------
// |  TAB  |  1  |  2  |  3     |  4     |  5  | ### |     |     |     |     |     |      |
// |  ALT  |  6  |  7  |  8     |  9     |  0  | ### |     |     |     |     |     |      |
// |  GUI  |  §  |     |        |  m_scj |     | ### |     |     |     |     |     |      |
//                     | L GAME |  m_scj |     | ### |     |     |     |
                        bindings = <
   &kp TAB   &kp N1  &kp N2  &kp N3     &kp N4   &kp N5      &trans  &trans  &trans  &trans  &trans  &trans
   &kp LALT  &kp N6  &kp N7  &kp N8     &kp N9   &kp N0      &trans  &trans  &trans  &trans  &trans  &trans
   &kp LGUI  &kp F6  &trans  &trans     &m_scj   &trans      &trans  &trans  &trans  &trans  &trans  &trans
                             &to BASE   &trans   &to GAME    &trans  &trans  &trans
                        >;
                };
        };
};

// TODOs
// [ ] Media Key Layer
// [ ] Mouse Assist Layer
// [ ] Gaming Layer
// [x] Navigration Layer
// [-] Mouse Movement Layer (not supported by zmk at the moment)
// [x] Function Key Layer
// [x] Macro for domain name
// [x] Fix System Layer

